# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
PUT/POST/PATCH /v2/entities/eid tests

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. POST /v2/entities/E1 complete
# 02. GET /v2/entities/E1
# 03. POST /v2/entities?options=keyValues, creating E2
# 04. GET /v2/entities/E2
# 05. POST /v2/entities/E2?options=keyValues
# 06. GET /v2/entities/E2
# 07. PUT /v2/entities/E2?options=keyValues
# 08. GET /v2/entities/E2
# 09. PATCH /v2/entities/E2?options=keyValues
# 10. GET /v2/entities/E2
#

echo "01. POST /v2/entities/E1 complete"
echo "================================="
payload='{
  "string": "a1",
  "int":     19,
  "float":   3.14,
  "true":    true,
  "false":   false,
  "compound_vector":  [ 1,2,3 ],
  "compound_object":  { "a": 1, "b": 2 },
  "string_object": {
    "value": "a1",
    "type":  "TA1"
  },
  "int_object": {
    "value": 21,
    "type":  "TA1"
  },
  "float_object": {
    "value": 22.1,
    "type":  "TA1"
  },
  "true_object": {
    "value": true,
    "type":  "TA1"
  },
  "false_object": {
    "value": false,
    "type":  "TA1"
  },
  "object_object": {
    "value": { "a": 1, "b": 2 },
    "type":  "TA1"
  },
  "vector_object": {
    "value": [ "a", "b" ],
    "type":  "TA1"
  },
  "with_metadata01": {
    "value": 0,
    "type": "MT1",
    "metadata": {
      "md_int": 1,
      "md_float:": 2.01,
      "md_string": "STRING",
      "md_true": true,
      "md_false": false,
      "md_object_int": {
        "value": 1,
        "type": "MDINT"
      },
      "md_object_float": {
        "value": 2.01,
        "type": "MDFLOAT"
      },
      "md_object_string": {
        "value": "3",
        "type": "MDSTRING"
      },
      "md_object_true": {
        "value": true,
        "type": "MDBOOL"
      },
      "md_object_false": {
        "value": false,
        "type": "MDBOOL"
      }
    }
  }
}'
orionCurl --url /v2/entities/E1 --payload "$payload" --json
echo
echo


echo "02. GET /v2/entities/E1"
echo "======================="
orionCurl --url /v2/entities/E1 --json
echo
echo



echo "03. POST /v2/entities?options=keyValues, creating E2"
echo "===================================================="
payload='{
  "id": "E2",
  "string": "a1",
  "int":     19,
  "float":   3.14,
  "true":    true,
  "false":   false,
  "compound_vector":  [ 1,2,3 ],
  "compound_object":  { "a": 1, "b": 2 },
  "compound_with_value": {
    "value": "a1",
    "type":  27
  },
  "value": "X"
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload" --json
echo
echo


echo "04. GET /v2/entities/E2"
echo "======================="
orionCurl --url /v2/entities/E2 --json
echo
echo


--REGEXPECT--
01. POST /v2/entities/E1 complete
=================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1
Date: REGEX(.*)



02. GET /v2/entities/E1
=======================
HTTP/1.1 200 OK
Content-Length: 1397
Content-Type: application/json
Date: REGEX(.*)

{
    "compound_object": {
        "metadata": {},
        "type": null,
        "value": {
            "a": 1.0,
            "b": 2.0
        }
    },
    "compound_vector": {
        "metadata": {},
        "type": null,
        "value": [
            1.0,
            2.0,
            3.0
        ]
    },
    "false": {
        "metadata": {},
        "type": null,
        "value": false
    },
    "false_object": {
        "metadata": {},
        "type": "TA1",
        "value": false
    },
    "float": {
        "metadata": {},
        "type": null,
        "value": 3.14
    },
    "float_object": {
        "metadata": {},
        "type": "TA1",
        "value": 22.1
    },
    "id": "E1",
    "int": {
        "metadata": {},
        "type": null,
        "value": 19.0
    },
    "int_object": {
        "metadata": {},
        "type": "TA1",
        "value": 21.0
    },
    "object_object": {
        "metadata": {},
        "type": "TA1",
        "value": {
            "a": 1.0,
            "b": 2.0
        }
    },
    "string": {
        "metadata": {},
        "type": null,
        "value": "a1"
    },
    "string_object": {
        "metadata": {},
        "type": "TA1",
        "value": "a1"
    },
    "true": {
        "metadata": {},
        "type": null,
        "value": true
    },
    "true_object": {
        "metadata": {},
        "type": "TA1",
        "value": true
    },
    "type": null,
    "vector_object": {
        "metadata": {},
        "type": "TA1",
        "value": [
            "a",
            "b"
        ]
    },
    "with_metadata01": {
        "metadata": {
            "md_false": {
                "type": null,
                "value": false
            },
            "md_float:": {
                "type": null,
                "value": 2.01
            },
            "md_int": {
                "type": null,
                "value": 1.0
            },
            "md_object_false": {
                "type": "MDBOOL",
                "value": false
            },
            "md_object_float": {
                "type": "MDFLOAT",
                "value": 2.01
            },
            "md_object_int": {
                "type": "MDINT",
                "value": 1.0
            },
            "md_object_string": {
                "type": "MDSTRING",
                "value": "3"
            },
            "md_object_true": {
                "type": "MDBOOL",
                "value": true
            },
            "md_string": {
                "type": null,
                "value": "STRING"
            },
            "md_true": {
                "type": null,
                "value": true
            }
        },
        "type": "MT1",
        "value": 0.0
    }
}


03. POST /v2/entities?options=keyValues, creating E2
====================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2
Date: REGEX(.*)



04. GET /v2/entities/E2
=======================
HTTP/1.1 200 OK
Content-Length: 579
Content-Type: application/json
Date: REGEX(.*)

{
    "compound_object": {
        "metadata": {},
        "type": null,
        "value": {
            "a": 1.0,
            "b": 2.0
        }
    },
    "compound_vector": {
        "metadata": {},
        "type": null,
        "value": [
            1.0,
            2.0,
            3.0
        ]
    },
    "compound_with_value": {
        "metadata": {},
        "type": null,
        "value": {
            "type": 27.0,
            "value": "a1"
        }
    },
    "false": {
        "metadata": {},
        "type": null,
        "value": false
    },
    "float": {
        "metadata": {},
        "type": null,
        "value": 3.14
    },
    "id": "E2",
    "int": {
        "metadata": {},
        "type": null,
        "value": 19.0
    },
    "string": {
        "metadata": {},
        "type": null,
        "value": "a1"
    },
    "true": {
        "metadata": {},
        "type": null,
        "value": true
    },
    "type": null,
    "value": {
        "metadata": {},
        "type": null,
        "value": "X"
    }
}


--TEARDOWN--
brokerStop CB
dbDrop CB
