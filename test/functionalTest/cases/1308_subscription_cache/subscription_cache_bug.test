# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Possible Bug in Subscription Cache

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart

--SHELL--

#
# 01. Subscribe to ONCHANGE for attribute 'h' in ALL entities for tenant 'ten01'
# 02. Create E1/h for tenant 'ten01'
# 03. Did a notification arrive to accumulator?
# 04. Modify E1/h
# 05. Did a notification arrive to accumulator?
#


echo "01. Subscribe to ONCHANGE for attribute 'h' in ALL entities for tenant 'ten01'"
echo "=============================================================================="
payload='{
  "entities": [
    {
      "type": "device",
      "isPattern": "true",
      "id":   ".*"
    }
  ],
  "reference": "http://localhost:'${LISTENER_PORT}'/notify",
  "duration": "P1D",
  "notifyConditions": [
    {
      "type": "ONCHANGE",
      "condValues": [ "h" ]
    }
  ]
}'
orionCurl --url /v1/subscribeContext --payload "$payload" --tenant ten01 --json
echo
echo


echo "02. Create E1/h for tenant 'ten01'"
echo "=================================="
payload='{
  "contextElements": [
    {
      "type": "device",
      "id": "E1",
      "attributes": [
        {
          "name": "h",
          "type": "string",
          "value": "E1-h"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload" --tenant ten01 --json
echo
echo


echo "03. Did a notification arrive to accumulator?"
echo "============================================="
accumulatorDump
echo
echo


echo "04. Modify E1/h"
echo "==============="
payload='{
  "contextElements": [
    {
      "type": "device",
      "id": "E1",
      "attributes": [
        {
          "name": "h",
          "type": "string",
          "value": "E1-h-2"
        }
      ]
    }
  ],
  "updateAction": "UPDATE"
}'
orionCurl --url /v1/updateContext --payload "$payload" --tenant ten01 --json
echo
echo


echo "05. Did a notification arrive to accumulator?"
echo "============================================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Subscribe to ONCHANGE for attribute 'h' in ALL entities for tenant 'ten01'
==============================================================================
HTTP/1.1 200 OK
Content-Length: 108
Content-Type: application/json
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "P1D",
        "subscriptionId": "REGEX([0-9a-f]{24})"
    }
}


02. Create E1/h for tenant 'ten01'
==================================
HTTP/1.1 200 OK
Content-Length: 386
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "h",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "device"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


03. Did a notification arrive to accumulator?
=============================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 469
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/xml, application/json
Fiware-Service: ten01
Content-Type: application/json

{
  "subscriptionId" : "REGEX([0-9a-f]{24})",
  "originator" : "localhost",
  "contextResponses" : [
    {
      "contextElement" : {
        "type" : "device",
        "isPattern" : "false",
        "id" : "E1",
        "attributes" : [
          {
            "name" : "h",
            "type" : "string",
            "value" : "E1-h"
          }
        ]
      },
      "statusCode" : {
        "code" : "200",
        "reasonPhrase" : "OK"
      }
    }
  ]
}
=======================================


04. Modify E1/h
===============
HTTP/1.1 200 OK
Content-Length: 386
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "h",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "device"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


05. Did a notification arrive to accumulator?
=============================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 469
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/xml, application/json
Fiware-Service: ten01
Content-Type: application/json

{
  "subscriptionId" : "REGEX([0-9a-f]{24})",
  "originator" : "localhost",
  "contextResponses" : [
    {
      "contextElement" : {
        "type" : "device",
        "isPattern" : "false",
        "id" : "E1",
        "attributes" : [
          {
            "name" : "h",
            "type" : "string",
            "value" : "E1-h"
          }
        ]
      },
      "statusCode" : {
        "code" : "200",
        "reasonPhrase" : "OK"
      }
    }
  ]
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 471
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/xml, application/json
Fiware-Service: ten01
Content-Type: application/json

{
  "subscriptionId" : "REGEX([0-9a-f]{24})",
  "originator" : "localhost",
  "contextResponses" : [
    {
      "contextElement" : {
        "type" : "device",
        "isPattern" : "false",
        "id" : "E1",
        "attributes" : [
          {
            "name" : "h",
            "type" : "string",
            "value" : "E1-h-2"
          }
        ]
      },
      "statusCode" : {
        "code" : "200",
        "reasonPhrase" : "OK"
      }
    }
  ]
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
